#!/usr/bin/with-contenv bash

mkdir -p /pictures

cd /app/www

# copy config
if [[ ! -e /config/user.ini ]]; then
    cp /defaults/user.ini /config/user.ini
fi
cp /config/user.ini /etc/php8/conf.d/99-user.ini

# pre-populate /pictures directory if it's empty
if [ ! "$(ls -A /pictures)" ]; then
    mv /app/www/public/uploads/* /pictures/
    chown -R abc:abc /pictures
elif [ ! "$(ls -A /pictures/import 2>/dev/null)" ]; then
    printf "\n\n\n\nSeems like you tried to use a path thats not managed by lychee, this is unsupported\n\n\n\n"
fi

if [[ ! -L "/app/www/public/uploads" ]]; then
    rm -rf /app/www/public/uploads
    ln -sf /pictures /app/www/public/uploads
fi

# handle storage directory
if [[ ! -e "/config/storage" ]]; then
    mv /app/www/storage /config/
fi

rm -rf /app/www/storage
ln -s /config/storage /app/www/storage
ln -sf /config/.env /app/www/.env

# check for .env and copy default if needed
if [ ! -f "/config/.env" ]; then
    if [[ -v DB_HOST && -v DB_USERNAME && -v DB_PASSWORD && -v DB_DATABASE ]]; then
        # check for the mysql endpoint for 30 seconds
        until nc -z -v -w30 "${DB_HOST}" "${DB_PORT}"
        do
            echo "Waiting for database connection..."
            # wait for 5 seconds before check again
            sleep 5
        done

        # populate config from variables
        cp /app/www/.env.example /config/.env

        echo "Populating config from variables"
        sed -i "s|DB_CONNECTION=sqlite|DB_CONNECTION=mysql|g" /config/.env
        sed -i "s|DB_HOST=.*$|DB_HOST=${DB_HOST}|g" /config/.env
        sed -i "s|DB_USERNAME=.*$|DB_USERNAME=${DB_USERNAME}|g" /config/.env
        sed -i "s|DB_PASSWORD=.*$|DB_PASSWORD=${DB_PASSWORD}|g" /config/.env
        sed -i "s|#DB_DATABASE=.*$|DB_DATABASE=${DB_DATABASE}|g" /config/.env
        sed -i "s|DB_PORT=.*$|DB_PORT=${DB_PORT}|g" /config/.env
        sed -i "s|TIMEZONE=.*$|TIMEZONE=${TZ}|g" /config/.env

        php artisan key:generate
        php artisan migrate --force
    elif [ -f "/config/lychee/config.php" ]; then
        # attempt upgrade
        cp /app/www/.env.example /config/.env
        php /defaults/upgrade.php
        mv /config/lychee /config/lychee.old

        # force nginx config upgrade
        mv /config/nginx/site-confs/default.conf /config/nginx/site-confs/default.conf.bak
        cp /defaults/nginx/site-confs/default.conf.sample /config/nginx/site-confs/default.conf

        php artisan key:generate
        php artisan migrate --force
    else
        echo "No upgrade or variables provided - set up application via the web interface"
    fi
else
    if [[ -v DB_HOST && -v DB_PORT ]]; then
        # check for the mysql endpoint for 30 seconds
        until nc -z -v -w30 "${DB_HOST}" "${DB_PORT}"
        do
            echo "Waiting for database connection..."
            sleep 5
        done
    fi
    php artisan migrate --force
fi

# permissions
chown -R abc:abc \
    /app/www \
    /config
